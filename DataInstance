#UserData
#!/bin/bash
sudo apt install unzip
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
sudo mv /tmp/eksctl /usr/local/bin
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
sudo snap install docker
sudo groupadd docker
sudo usermod -aG docker ${USER}
curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
sudo apt-get install apt-transport-https --yes
echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
sudo apt-get update
sudo apt-get install helm
sudo apt-get install jq -y


#CrearCluster
eksctl create cluster \
--name eks-mundos-e \
--region us-east-1 \
--node-type t2.small \
--with-oidc \
--ssh-access \
--ssh-public-key jenkins \
--managed \
--full-ecr-access \
--zones us-east-1a,us-east-1b,us-east-1c

#
kubectl apply -k "github.com/kubernetes-sigs/aws-efs-csi-driver/deploy/kubernetes/overlays/stable/?ref=master"

aws eks describe-cluster --name eks-mundos-e --query "cluster.resourcesVpcConfig.vpcId" --output text

aws ec2 describe-vpcs --vpc-ids vpc-0fa80f1593e4e1bc9 --query "Vpcs[].CidrBlock" --output text #cambiar valor de VPC

aws ec2 create-security-group --description efs-test-sg --group-name efs-sg --vpc-id vpc-0fa80f1593e4e1bc9 #cambiar valor de VPC

aws ec2 authorize-security-group-ingress --group-id sg-009c67afb3dbb5a43 --protocol tcp --port 2049 --cidr 192.168.0.0/16 #cambiar valor de SG

aws efs create-file-system --creation-token eks-efs

aws efs create-mount-target --file-system-id fs-54d875e0 --subnet-id subnet-05093224de7dec2da --security-group sg-009c67afb3dbb5a43 #cambiar valores FS, subnet y SG

